[{"path":"https://asarmy.github.io/ECSprep/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 ECSprep authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://asarmy.github.io/ECSprep/articles/example-1.html","id":"objective","dir":"Articles","previous_headings":"","what":"Objective","title":"Creating ECS input files for Fault Displacement Hazard Analysis","text":"Forward-application fault displacement hazard analysis models, user mapped traces active faults site locations hazard analysis. example shows use ECSprep create ruptures input files Lavrentiadis & Abrahamson ECS algorithm standard Esri shapefiles.","code":""},{"path":"https://asarmy.github.io/ECSprep/articles/example-1.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"Creating ECS input files for Fault Displacement Hazard Analysis","text":"example, use trace Newport-Inglewood/Rose Canyon Fault System US Geological Survey Quarternary Fault Fold Database. provided Esri shapefile inst/extdata package. also consider randomly chosen site along NI/RC. saved Esri shapefile inst/extdata package.","code":""},{"path":"https://asarmy.github.io/ECSprep/articles/example-1.html","id":"preparing-the-faults","dir":"Articles","previous_headings":"","what":"Preparing the faults","title":"Creating ECS input files for Fault Displacement Hazard Analysis","text":"Lavrentiadis & Abrahamson Event Coordinate System (ECS) algorithm develops nominal fault system trace mapped faults represented ordered vertices trace. use create_ecs_input_ruptures.R function package. takes one required argument, in_filepath, one optional argument output_folder CSV saved. in_filepath must provide Esri shapefile. formats supported. output_folder specified, CSV saved directory input shapefile. CSV retain attributes input shapefile. also add following attributes: RUP_ID unique identifier fault trace line. NODE_ID order vertices fault trace line. Longitude X coordinate WGS84 (EPSG:4326) NODE_ID. Latitude Y coordinate WGS84 (EPSG:4326) NODE_ID. RUP_ID column exists input shapefile, retained -. attribute Rank, added automatically populated “None.” recommended users assign Principal Distributed ranks ECS algorithm works better rankings. example , shapefile contain ranks, get warning column added. Rank column contains invalid values, user notified script halt execution. can import CSV confirm new columns added original ones retained: CSV can used ruptures input Lavrentiadis & Abrahamson ECS algorithm tool.","code":"input_shp <- system.file(\"extdata\", \"usgs_qffd_nirc.shp\", package=\"ECSprep\") create_ecs_input_ruptures(input_shp) #> Coordinate reference system check passed. #> Warning in create_ecs_input_ruptures(input_shp): Rank attribute is missing. It was added with default values of `None`. #> Rank check passed. #> Geometry check passed. #> The data frame was saved in: #>  /home/runner/work/_temp/Library/ECSprep/extdata/ECSprep-outputs file_out <- system.file(\"extdata\",\"ECSprep-outputs\", \"rupture_vertices-usgs_qffd_nirc.csv\", package=\"ECSprep\") result <-  read.csv(file.path(file_out)) names(result) #>  [1] \"fault_name\" \"sec_name\"   \"fault_id\"   \"section_id\" \"Location\"   #>  [6] \"linetype\"   \"age\"        \"dip\"        \"slip_rate\"  \"slip_sense\" #> [11] \"scale\"      \"class\"      \"mapped_cer\" \"strike\"     \"length\"     #> [16] \"cooperator\" \"earthquake\" \"fault_url\"  \"symbology\"  \"ref_id\"     #> [21] \"Shape_Leng\" \"Rank\"       \"RUP_ID\"     \"NODE_ID\"    \"Latitude\"   #> [26] \"Longitude\""},{"path":"https://asarmy.github.io/ECSprep/articles/example-1.html","id":"preparing-the-hazard-sites","dir":"Articles","previous_headings":"","what":"Preparing the hazard sites","title":"Creating ECS input files for Fault Displacement Hazard Analysis","text":"fault displacement hazard analysis models principal faulting use along-strike location site predictor variable. Similarly, models distributed faulting use strike-normal distance site predictor variable. Lavrentiadis & Abrahamson algorithm can provide ECS ordinates hazard site ECS established mapped faults (optionally fault displacement measurement locations). use create_ecs_input_haz_sites.R function package. takes one required argument, in_filepath, one optional argument output_folder CSV saved. in_filepath must provide Esri shapefile. formats supported. output_folder specified, CSV saved directory input shapefile. CSV retain attributes input shapefile. also add following attributes: SITE_ID unique identifier site . Longitude X coordinate WGS84 (EPSG:4326) SITE_ID. Latitude Y coordinate WGS84 (EPSG:4326) SITE_ID. can import CSV inspect contents: CSV can used optional hazard site input Lavrentiadis & Abrahamson ECS algorithm tool. Note file easy create manually required contents columns SITE_ID, Latitude, Longitude.","code":"input_shp <- system.file(\"extdata\", \"example_site.shp\", package=\"ECSprep\") create_ecs_input_haz_sites(input_shp) #> Coordinate reference system check passed. #> Geometry check passed. #> The data frame was saved in: #>  /home/runner/work/_temp/Library/ECSprep/extdata/ECSprep-outputs file_out <- system.file(\"extdata\", \"ECSprep-outputs\", \"hazard_sites-example_site.csv\", package=\"ECSprep\") result <-  read.csv(file.path(file_out)) result #>   id SITE_ID Latitude Longitude #> 1 NA       1 33.39095 -117.6753"},{"path":"https://asarmy.github.io/ECSprep/articles/example-2.html","id":"objective","dir":"Articles","previous_headings":"","what":"Objective","title":"Creating ECS input files for presentation/analysis of data from a surface-rupturing earthquake","text":"Presentation analysis post-earthquake fault rupture displacement data, user mapped traces surface ruptures locations fault displacement measured. example shows use ECSprep create ruptures input file fault displacement measurements input file Lavrentiadis & Abrahamson ECS algorithm standard Esri shapefiles..","code":""},{"path":"https://asarmy.github.io/ECSprep/articles/example-2.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"Creating ECS input files for presentation/analysis of data from a surface-rupturing earthquake","text":"example, use data 1915 Pleasant Valley earthquake Nevada. original data Wallace et al. (1984) included FDHI Project Database Flatfiles (Sarmiento et al., 2021) Earthquake #34. shapefiles provided inst/extdata package.","code":""},{"path":"https://asarmy.github.io/ECSprep/articles/example-2.html","id":"preparing-the-faults","dir":"Articles","previous_headings":"","what":"Preparing the faults","title":"Creating ECS input files for presentation/analysis of data from a surface-rupturing earthquake","text":"Lavrentiadis & Abrahamson Event Coordinate System (ECS) algorithm develops nominal fault system trace mapped faults represented ordered vertices trace. Just like example Creating ECS input files Fault Displacement Hazard Analysis, use create_ecs_input_ruptures.R function package. takes one required argument, in_filepath, one optional argument output_folder CSV saved. in_filepath must provide Esri shapefile. formats supported. output_folder specified, CSV saved directory input shapefile. CSV retain attributes input shapefile. also add following attributes: RUP_ID unique identifier fault trace line. NODE_ID order vertices fault trace line. Longitude X coordinate WGS84 (EPSG:4326) NODE_ID. Latitude Y coordinate WGS84 (EPSG:4326) NODE_ID. RUP_ID column exists input shapefile, retained -. attribute Rank, added automatically populated “None.” recommended users assign Principal Distributed ranks ECS algorithm works better rankings. example , shapefile contained Rank column valid ranks. can import CSV confirm new columns added original ones retained: CSV can used ruptures input Lavrentiadis & Abrahamson ECS algorithm tool.","code":"input_shp <- system.file(\"extdata\", \"pleasant_valley_final_ruptures.shp\", package=\"ECSprep\") create_ecs_input_ruptures(input_shp) #> Coordinate reference system check passed. #> Rank check passed. #> Geometry check passed. #> The data frame was saved in: #>  /home/runner/work/_temp/Library/ECSprep/extdata/ECSprep-outputs file_out <- system.file(\"extdata\", \"ECSprep-outputs\", \"rupture_vertices-pleasant_valley_final_ruptures.csv\", package=\"ECSprep\") result <-  read.csv(file.path(file_out)) names(result) #> [1] \"RUP_ID\"    \"MapScale\"  \"length_m\"  \"Rank\"      \"NODE_ID\"   \"Latitude\"  #> [7] \"Longitude\""},{"path":"https://asarmy.github.io/ECSprep/articles/example-2.html","id":"preparing-the-fault-displacement-measurement-sites","dir":"Articles","previous_headings":"","what":"Preparing the fault displacement measurement sites","title":"Creating ECS input files for presentation/analysis of data from a surface-rupturing earthquake","text":"fault displacement hazard analysis models principal faulting use along-strike location site predictor variable. Similarly, models distributed faulting use strike-normal distance site predictor variable. Lavrentiadis & Abrahamson algorithm can use data influence ECS addition impact fault traces ECS. use create_ecs_input_measurements.R function package. takes one required argument, in_filepath, one optional argument output_folder CSV saved. Note column called displ contains fault displacement measurements required. long values units, unit matter relative amplitude important. in_filepath must provide Esri shapefile. formats supported. displ_column specified, user notified script halt execution. output_folder specified, CSV saved directory input shapefile. CSV retain attributes input shapefile. also add following attributes: PT_ID unique identifier site . Longitude X coordinate WGS84 (EPSG:4326) SITE_ID. Latitude Y coordinate WGS84 (EPSG:4326) SITE_ID. PT_ID column exists input shapefile, retained -. attribute Rank, added automatically populated “None.” recommended users assign Principal Distributed ranks ECS algorithm works better rankings. example , shapefile contained Rank column valid ranks. can import CSV inspect contents: CSV can used optional fault displacement measurement input Lavrentiadis & Abrahamson ECS algorithm tool. Note file easy create manually required contents columns PT_ID, displ, Latitude, andLongitude`.","code":"input_shp <- system.file(\"extdata\", \"pleasant_valley_final_measurements.shp\", package=\"ECSprep\") create_ecs_input_measurements(input_shp) #> Coordinate reference system check passed. #> Warning in check_ranking(sf_object): Some values in `Rank` were renamed for the purposes of standardization. #> Rank check passed. #> Geometry check passed. #> The data frame was saved in: #>  /home/runner/work/_temp/Library/ECSprep/extdata/ECSprep-outputs file_out <- system.file(\"extdata\", \"ECSprep-outputs\", \"displacement_sites-pleasant_valley_final_measurements.csv\", package=\"ECSprep\") result <-  read.csv(file.path(file_out))  options(width = 120) head(result, 5) #>   PT_ID VS_cen SH_cen  SH_lo  SH_hi FPS_cen      Rank Reco_Net displ Latitude Longitude #> 1     1 -999.9    0.7 -999.9 -999.9  -999.9 Principal     0.70  0.70 40.13531 -117.7407 #> 2     3 -999.9    1.2 -999.9 -999.9  -999.9 Principal     1.20  1.20 40.15164 -117.7309 #> 3     4 -999.9    0.9 -999.9 -999.9  -999.9 Principal     0.90  0.90 40.15446 -117.7288 #> 4     6 -999.9 -999.9    0.5    2.0  -999.9 Principal     1.25  1.25 40.15834 -117.7256 #> 5     7 -999.9 -999.9    0.3    0.4  -999.9 Principal     0.35  0.35 40.16148 -117.7241"},{"path":"https://asarmy.github.io/ECSprep/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alex Sarmiento. Author, maintainer.","code":""},{"path":"https://asarmy.github.io/ECSprep/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sarmiento (2024). ECSprep: package creates CSV input files Lavrentiadis & Abrahamson ECS algorithm.. R package version 0.0.0.9000, https://asarmy.github.io/ECSprep/, https://github.com/asarmy/ECSprep.","code":"@Manual{,   title = {ECSprep: This package creates CSV input files for the Lavrentiadis & Abrahamson ECS algorithm.},   author = {Alex Sarmiento},   year = {2024},   note = {R package version 0.0.0.9000, https://asarmy.github.io/ECSprep/},   url = {https://github.com/asarmy/ECSprep}, }"},{"path":"https://asarmy.github.io/ECSprep/index.html","id":"ecsprep","dir":"","previous_headings":"","what":"This package creates CSV input files for the Lavrentiadis & Abrahamson ECS algorithm.","title":"This package creates CSV input files for the Lavrentiadis & Abrahamson ECS algorithm.","text":"goal ECSprep create CSV input files Lavrentiadis & Abrahamson Event Coordinate System (ECS) algorithm user’s SHP files contain rupture fault trace line work, fault displacement measurement sites, hazard analysis sites. two common applications ECS algorithm: Forward-application fault displacement hazard analysis models, user mapped traces active faults site locations hazard analysis. Presentation analysis post-earthquake fault rupture displacement data, user mapped traces surface ruptures locations fault displacement measured.","code":""},{"path":"https://asarmy.github.io/ECSprep/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"This package creates CSV input files for the Lavrentiadis & Abrahamson ECS algorithm.","text":"can install development version ECSprep like :","code":"install.packages(\"remotes\") remotes::install_github(\"asarmy/ECSprep\")"},{"path":"https://asarmy.github.io/ECSprep/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"This package creates CSV input files for the Lavrentiadis & Abrahamson ECS algorithm.","text":"basic example shows use package: examples, see Vignettes: Creating ECS input files Fault Displacement Hazard Analysis example geared toward forward-application fault displacement hazard analysis models based mapped traces active faults hazard evaluation sites. Creating ECS input files presentation/analysis data surface-rupturing earthquak example geared toward presentation analysis post-earthquake fault rupture displacement data based mapped traces surface ruptures locations fault displacement measured.","code":"library(ECSprep) create_ecs_input_ruptures(file.path(path/to/my/rupture_traces.shp)) create_ecs_input_measurements(file.path(path/to/my/displ_meas_sites.shp)) create_ecs_input_haz_sites(file.path(path/to/my/hazard_study_sites.shp))"},{"path":"https://asarmy.github.io/ECSprep/index.html","id":"gotchas","dir":"","previous_headings":"","what":"“Gotchas”","title":"This package creates CSV input files for the Lavrentiadis & Abrahamson ECS algorithm.","text":"Esri shapefiles accepted inputs. file types attempted, user notified script halt execution. shapefiles must assigned Coordinate Reference System (CRS); words, PRJ file must included. Principal Distributed rankings faults measurements required recommended. ECS algorithm performs better complex ruptures specified. containted column called Rank. column called displ required processing fault displacement measurements. present, user notified script halt execution.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/check_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"Check CRS of an sf Object — check_crs","title":"Check CRS of an sf Object — check_crs","text":"Verifies coordinate reference system (CRS) provided 'sf' object, required specific geographical applications. function halts execution error CRS set.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/check_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check CRS of an sf Object — check_crs","text":"","code":"check_crs(sf_object)"},{"path":"https://asarmy.github.io/ECSprep/reference/check_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check CRS of an sf Object — check_crs","text":"sf_object 'sf' object check, representing geographical features attributes.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/check_crs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check CRS of an sf Object — check_crs","text":"return value halts execution error CRS 'sf_object' .","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/check_geometry_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Geometry Type of an sf Object — check_geometry_type","title":"Check Geometry Type of an sf Object — check_geometry_type","text":"Validates whether geometry 'sf' object matches specified category. function designed ensure spatial operations performed appropriate geometry types, specifically 'line' 'point' geometries.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/check_geometry_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Geometry Type of an sf Object — check_geometry_type","text":"","code":"check_geometry_type(sf_object, geom_category)"},{"path":"https://asarmy.github.io/ECSprep/reference/check_geometry_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Geometry Type of an sf Object — check_geometry_type","text":"sf_object 'sf' object, represents spatial features. geom_category string indicating expected geometry category. Accepts 'line' LINESTRING MULTILINESTRING geometries, 'point' POINT MULTIPOINT geometries.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/check_geometry_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Geometry Type of an sf Object — check_geometry_type","text":"return value halts execution error message 'sf_object''s geometry match expected category.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/check_ranking.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize and Validate 'Rank' Attribute in an sf Object — check_ranking","title":"Standardize and Validate 'Rank' Attribute in an sf Object — check_ranking","text":"Ensures 'Rank' attribute 'sf' object contains valid values standardizes replacing \"Primary\" \"Cumulative\" \"Principal\" \"Secondary\" \"Distributed\". checks invalid 'Rank' values stops execution error found.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/check_ranking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize and Validate 'Rank' Attribute in an sf Object — check_ranking","text":"","code":"check_ranking(sf_object)"},{"path":"https://asarmy.github.io/ECSprep/reference/check_ranking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize and Validate 'Rank' Attribute in an sf Object — check_ranking","text":"sf_object 'sf' object 'Rank' attribute.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/check_ranking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize and Validate 'Rank' Attribute in an sf Object — check_ranking","text":"Returns modified 'sf' object 'Rank' attribute standardized validated. invalid 'Rank' values present, execution halted error message.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/create_ecs_input_haz_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ECS Hazard Sites Input File from Esri Shapefile — create_ecs_input_haz_sites","title":"Create ECS Hazard Sites Input File from Esri Shapefile — create_ecs_input_haz_sites","text":"Processes Esri shapefile point geometry input Lavrentiadis & Abrahamson ECS tool. function transforms shapefile's CRS EPSG:4326 formats data ECS tool input. output saved CSV file specified default directory.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/create_ecs_input_haz_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ECS Hazard Sites Input File from Esri Shapefile — create_ecs_input_haz_sites","text":"","code":"create_ecs_input_haz_sites(in_filepath, output_folder = NULL)"},{"path":"https://asarmy.github.io/ECSprep/reference/create_ecs_input_haz_sites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ECS Hazard Sites Input File from Esri Shapefile — create_ecs_input_haz_sites","text":"in_filepath path input Esri shapefile, recommended use 'file.path()' construction. output_folder (Optional) Directory saving output CSV file; defaults 'ECSprep-outputs' input file directory.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/create_ecs_input_haz_sites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create ECS Hazard Sites Input File from Esri Shapefile — create_ecs_input_haz_sites","text":"Outputs CSV file specified directory prints file location. return value function .","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/create_ecs_input_measurements.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ECS Fault Displacement Measurements Input File from Esri Shapefile — create_ecs_input_measurements","title":"Create ECS Fault Displacement Measurements Input File from Esri Shapefile — create_ecs_input_measurements","text":"Processes Esri shapefile point geometry input Lavrentiadis & Abrahamson ECS tool. function transforms shapefile's CRS EPSG:4326, adds default 'Rank' field missing, formats data ECS tool input. output saved CSV file specified default directory. Note column called 'displ' contains fault displacement measurements required execution halted error message present.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/create_ecs_input_measurements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ECS Fault Displacement Measurements Input File from Esri Shapefile — create_ecs_input_measurements","text":"","code":"create_ecs_input_measurements(in_filepath, output_folder = NULL)"},{"path":"https://asarmy.github.io/ECSprep/reference/create_ecs_input_measurements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ECS Fault Displacement Measurements Input File from Esri Shapefile — create_ecs_input_measurements","text":"in_filepath path input Esri shapefile, recommended use 'file.path()' construction. output_folder (Optional) Directory saving output CSV file; defaults 'ECSprep-outputs' input file directory.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/create_ecs_input_measurements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create ECS Fault Displacement Measurements Input File from Esri Shapefile — create_ecs_input_measurements","text":"Outputs CSV file specified directory prints file location. return value function .","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/create_ecs_input_ruptures.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ECS Ruptures Input File from Esri Shapefile — create_ecs_input_ruptures","title":"Create ECS Ruptures Input File from Esri Shapefile — create_ecs_input_ruptures","text":"Processes Esri shapefile line geometry input Lavrentiadis & Abrahamson ECS tool. function transforms shapefile's CRS EPSG:4326, adds default 'Rank' field missing, formats data ECS tool input. output saved CSV file specified default directory.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/create_ecs_input_ruptures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ECS Ruptures Input File from Esri Shapefile — create_ecs_input_ruptures","text":"","code":"create_ecs_input_ruptures(in_filepath, output_folder = NULL)"},{"path":"https://asarmy.github.io/ECSprep/reference/create_ecs_input_ruptures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ECS Ruptures Input File from Esri Shapefile — create_ecs_input_ruptures","text":"in_filepath path input Esri shapefile, recommended use 'file.path()' construction. output_folder (Optional) Directory saving output CSV file; defaults 'ECSprep-outputs' input file directory.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/create_ecs_input_ruptures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create ECS Ruptures Input File from Esri Shapefile — create_ecs_input_ruptures","text":"Outputs CSV file specified directory prints file location. return value function .","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/process_hazsite.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert hazard analysis sites to a data frame with necessary attributes for\nthe ECS Tool — process_hazsite","title":"Convert hazard analysis sites to a data frame with necessary attributes for\nthe ECS Tool — process_hazsite","text":"Transforms 'sf' object containing POINT geometries data frame. function tailored preparing input data Lavrentiadis & Abrahamson ECS tool .","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/process_hazsite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert hazard analysis sites to a data frame with necessary attributes for\nthe ECS Tool — process_hazsite","text":"","code":"process_hazsite(sf_object)"},{"path":"https://asarmy.github.io/ECSprep/reference/process_hazsite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert hazard analysis sites to a data frame with necessary attributes for\nthe ECS Tool — process_hazsite","text":"sf_object 'sf' object, expected contain POINT geometries representing hazard evaluation sites.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/process_hazsite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert hazard analysis sites to a data frame with necessary attributes for\nthe ECS Tool — process_hazsite","text":"Returns data frame derived input 'sf' object. data frame includes original data coordinates ('Latitude', 'Longitude' EPSG:4326).","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/process_measurements.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert measurement sites to a data frame with necessary attributes for the\nECS Tool — process_measurements","title":"Convert measurement sites to a data frame with necessary attributes for the\nECS Tool — process_measurements","text":"Transforms 'sf' object containing POINT geometries associated displacement measurements data frame. function tailored preparing input data Lavrentiadis & Abrahamson ECS tool .","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/process_measurements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert measurement sites to a data frame with necessary attributes for the\nECS Tool — process_measurements","text":"","code":"process_measurements(sf_object)"},{"path":"https://asarmy.github.io/ECSprep/reference/process_measurements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert measurement sites to a data frame with necessary attributes for the\nECS Tool — process_measurements","text":"sf_object 'sf' object, expected contain POINT geometries representing measurement sites. column called 'displ' required; execution halted error message column present.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/process_measurements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert measurement sites to a data frame with necessary attributes for the\nECS Tool — process_measurements","text":"Returns data frame derived input 'sf' object. data frame includes original data coordinates ('Latitude', 'Longitude' EPSG:4326).","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/project_to_4326.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform sf Object to EPSG:4326 CRS — project_to_4326","title":"Transform sf Object to EPSG:4326 CRS — project_to_4326","text":"Checks coordinate reference system (CRS) 'sf' object transforms EPSG:4326 already CRS. EPSG:4326 corresponds WGS 84, widely used geographical coordinate system.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/project_to_4326.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform sf Object to EPSG:4326 CRS — project_to_4326","text":"","code":"project_to_4326(sf_object)"},{"path":"https://asarmy.github.io/ECSprep/reference/project_to_4326.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform sf Object to EPSG:4326 CRS — project_to_4326","text":"sf_object 'sf' object representing spatial features. function checks , necessary, converts CRS object EPSG:4326.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/project_to_4326.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform sf Object to EPSG:4326 CRS — project_to_4326","text":"Returns 'sf' object EPSG:4326 coordinate reference system. original object already EPSG:4326, returned unchanged.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/rups2verts.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert rupture line work to a data frame of vertices with necessary\nattributes for the ECS Tool — rups2verts","title":"Convert rupture line work to a data frame of vertices with necessary\nattributes for the ECS Tool — rups2verts","text":"Transforms 'sf' object containing LINESTRING geometries data frame vertices. vertex assigned unique node ID within rupture line (RUP_ID) includes latitude longitude coordinates. function tailored preparing input data Lavrentiadis & Abrahamson ECS tool structuring 'sf' object's line work vertex format data frame.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/rups2verts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert rupture line work to a data frame of vertices with necessary\nattributes for the ECS Tool — rups2verts","text":"","code":"rups2verts(sf_object)"},{"path":"https://asarmy.github.io/ECSprep/reference/rups2verts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert rupture line work to a data frame of vertices with necessary\nattributes for the ECS Tool — rups2verts","text":"sf_object 'sf' object, expected contain LINESTRING geometries.","code":""},{"path":"https://asarmy.github.io/ECSprep/reference/rups2verts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert rupture line work to a data frame of vertices with necessary\nattributes for the ECS Tool — rups2verts","text":"Returns data frame row represents vertex original LINESTRING geometries. data frame includes columns RUP_ID (rupture line ID), NODE_ID (node order within RUP_ID), Latitude/Longitude coordinates.","code":""},{"path":"https://asarmy.github.io/ECSprep/news/index.html","id":"ecsprep-development-version","dir":"Changelog","previous_headings":"","what":"ECSprep (development version)","title":"ECSprep (development version)","text":"Initial CRAN submission.","code":""}]
